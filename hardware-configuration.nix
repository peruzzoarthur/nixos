# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/bfb1140e-3a36-4631-a135-fda6a6104291";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-854549b9-4b1c-4a64-8d36-b647d3507a65".device = "/dev/disk/by-uuid/854549b9-4b1c-4a64-8d36-b647d3507a65";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/116A-1995";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/ae8c0550-5a59-417d-9b1d-a459f0e9dfeb";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-73214f6b-4851-40a2-aa44-974aecbf3ba8".device = "/dev/disk/by-uuid/73214f6b-4851-40a2-aa44-974aecbf3ba8";

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
